- hosts: master,etcd,node
  name: Gather facts from collectors
  become: true
  become_method: sudo
  tasks: [ ]
- name: Create template files
  hosts: localhost
  connection: local
  vars:
    arr1: "{{ groups['master'] | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address'])  | join('\",\"') }}"
    arr2: "{{ groups['node'] | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address'])  | join('\",\"') }}"
    arr3: "{{ groups['etcd'] | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address'])  | join('\",\"') }}"
    arr4: "{{ groups['etcd'] | join('\",\"') }}"
    arr5: "{{ groups['master'] | join('\",\"') }}"
    arr6: "{{ groups['node'] | join('\",\"') }}"
    master1_ext_ip : "{{ hostvars['master1']['ansible_host'] }}"
    master2_ext_ip : "{{ hostvars['master2']['ansible_host'] }}"
  tasks:
    - name: Creates directory
      file: path=templates state=directory
    - copy:
        src: ../../templates
        dest: ./
        owner: pendi
        group: pendi
        mode: 0644
    - replace:
        path: templates/kubeconfig
        regexp: 'CONTROLLER_IP'
        replace: "{{ hostvars['master1']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/etcd.service
        regexp: 'ETCD1'
        replace: "{{ hostvars['etc1']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/etcd.service
        regexp: 'ETCD2'
        replace: "{{ hostvars['etc2']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/kube-apiserver.service
        regexp: 'ETCD1'
        replace: "{{ hostvars['etc1']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/kube-apiserver.service
        regexp: 'ETCD2'
        replace: "{{ hostvars['etc2']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/kubelet.service
        regexp: 'APISERVER_IP1'
        replace: "{{ hostvars['master1']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/kubelet.service
        regexp: 'APISERVER_IP2'
        replace: "{{ hostvars['master2']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/systemd/kube-proxy.service
        regexp: 'APISERVER_IP1'
        replace: "{{ hostvars['master1']['ansible_eth0']['ipv4']['address'] }}"
    - replace:
        path: templates/kubernetes-csr.json
        regexp: 'KUBERNETES_HOSTS'
        replace: "10.32.0.1\",\"{{arr5}}\", \"{{arr1 }}\", \"{{arr4 }}\", \"{{arr3 }}\", \"{{arr6 }}\",\"{{arr2 }}\",\"localhost\",\"127.0.0.1\",\"{{ master1_ext_ip }}\",\"{{master2_ext_ip}}"
    - name: Create client cert
      shell: "cfssl gencert -ca=../../certs/ca.pem -ca-key=../../certs/ca-key.pem -config=../../certs/ca-config.json -profile=kubernetes templates/kubernetes-csr.json | cfssljson -bare kubernetes"
    - name: Move certs to temporary folder
      command: mv kubernetes.pem templates/kubernetes.pem
    - name: Move certs to temporary folder
      command: mv kubernetes-key.pem templates/kubernetes-key.pem
    - name: Move certs to temporary folder
      command: mv kubernetes.csr templates/kubernetes.csr

- name: Copy certificate to all
  hosts: master,etcd,node
  become: true
  become_method: sudo
  tasks:
    - copy:
        src: ../../certs/ca.pem
        dest: /
        owner: root
        group: root
        mode: 0644
    - copy:
        src: templates/kubernetes.pem
        dest: /
        owner: root
        group: root
        mode: 0644
    - copy:
        src: templates/kubernetes-key.pem
        dest: /
        owner: root
        group: root
        mode: 0644

- include: setup_etcd.yml
- include: setup_master.yml
- include: setup_node.yml

# CHECK WORKER
- name: Check nodes
  hosts: master1
  become: true
  become_method: sudo
  tasks:
    - name: Check registered nodes
      command: kubectl get nodes -o wide
      register: kubenodes
    - debug: var=kubenodes.stdout_lines